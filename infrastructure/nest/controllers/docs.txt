### Полный воркфлоу запроса:
- запрос получает контроллер в инфраструктурном слое
- для своей работы контроллер использует интерфейсы/DTO из презентационного слоя
- для выполнения контроллер дергает методы из сервисов приложения
- сервис приложения должен дернуть методы доменных сущностей
- чтобы их получить/сохранить или выполнить еще какие-то инфраструктурные действия (отправить email) сервис приложения должен использовать инфраструктурный сервис
- инфраструктурный сервис лежат в инфраструктурном слое, поэтому напрямую этого сделать нельзя
- сервис приложения должен разместить в своем слое интерфейсы инфраструктурных сервисов, которые он готов использовать
- инфраструктурные сервисов реализуют эти интерфейсы и с помощью DI передаются в сервис приложения
- инфраструктурный сервис использует для своей работы репозитории
- и то и другое лежит в инфраструктурном слое, но, обычно, в разных фреймворках
- чтобы код разных фреймворков не смешивался, лушчше разделить их интерфейсами
- инфраструктурный сервис должен разместить в своем слое интерфейсы репозиториев, которые он готов использовать
- репозитории реализуют эти интерфейсы и с помощью DI передаются в инфраструктурный сервис

### Укороченный воркфлоу запроса: если мы реализуем CRUD с бедной бизнес-логикой, и через все эти промежуточные вызовы мы передаем одни и те же данные, то вокфлоу можно как угодно сильно сократить (не меняя порядок!):
- запрос получает контроллер в инфраструктурном слое
- для выполнения контроллер дергает методы из репозиториев
- и то и другое лежит в инфраструктурном слое, но, обычно, в разных фреймворках
- контроллер должен разместить в своем слое интерфейсы репозиториев, которые он готов использовать
- репозитории реализуют эти интерфейсы и с помощью DI передаются в контроллер
